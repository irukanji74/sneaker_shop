<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<context:component-scan base-package="athletics.web"/>
	
	    <!-- @EnableWebMVC, this is the same as This tag registers the DefaultAnnotationHandlerMapping and
         AnnotationMethodHandlerAdapter beans that are required for Spring MVC -->
         <!--automatically registers Bean Validation support in Spring MVC through the LocalValidatorFactoryBean  -->
	<mvc:annotation-driven />
	
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- Example: a logical view name of 'showMessage' is mapped to '/WEB-INF/jsp/showMessage.jsp' -->
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	<!--Спринг будет искать ресурсы(css, js...) для отображения на стр. jsp в папке по адресу webapp/resources  -->
	<mvc:resources mapping="/resources/**" location="/resources/" /> 

      <!--Спринг будет смотреть в classpath т.е. и в Maven Dependencies  -->
	<mvc:resources mapping="/webjars/**" location="classpath:/META-INF/resources/webjars/" />
	
	<!--Use it in static cases when there is no Java controller logic to execute before the view generates the response.  -->
    <!-- <mvc:view-controller path="/" view-name="home_bootstrap"/> -->
    
    <!-- This tag allows for mapping the DispatcherServlet to "/" 
         <mvc:default-servlet-handler/>
    -->
    
    <!-- Exception Resolver that resolves exceptions through @ExceptionHandler methods
       <bean class="org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver"/>
 	 -->

</beans>
