<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.8.xsd">

          <!-- Configurer that replaces ${...} placeholders with values from a properties file -->
          <!-- (in this case, JDBC-related settings for the dataSource definition below) -->
      <!--   <context:property-placeholder location="classpath:spring/data-access.properties" system-properties-mode="OVERRIDE"/>
        
          DataSource configuration for the tomcat jdbc connection pool 
             See here for more details on commons-dbcp versus tomcat-jdbc: 
             http://blog.ippon.fr/2013/03/13/improving-the-performance-of-the-spring-petclinic-sample-application-part-3-of-5/
        <bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource"
                    p:driverClassName="${jdbc.driverClassName}" p:url="${jdbc.url}"
                    p:username="${jdbc.username}" p:password="${jdbc.password}"/>
          
          Database initializer. If any of the script fails, the initialization stops.
          As an alternative, for embedded databases see <jdbc:embedded-database/>.
        <jdbc:initialize-database data-source="dataSource">
          <jdbc:script location="${jdbc.initLocation}"/>
          <jdbc:script location="${jdbc.dataLocation}"/>
        </jdbc:initialize-database> -->

           <!-- Если нужно использовать встроенную БД -->
		  <!-- <jdbc:embedded-database id="datasource" type="H2">
			<jdbc:script location="classpath:init.sql"/>	
		  </jdbc:embedded-database> -->
		
		<!-- Определяю свойства Hibernate в application-config.xml через data-access.properties -->
		<!-- <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
			<property name="dataSource" ref="dataSource"/>	
			<property name="persistenceUnitName" value="shop"/>
		</bean>	-->
</beans>
